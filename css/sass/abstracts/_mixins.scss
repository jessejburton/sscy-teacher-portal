/* mixins */
@mixin appearance ($value: none) {
    -webkit-appearance:     $value;
    -moz-appearance:        $value;
    -ms-appearance:         $value;
    -o-appearance:          $value;
    appearance:             $value;
}

@mixin fluid-width($cols) {
    width: percentage(1/12*$cols);
}

@mixin fluid-width($cols) {
    width: percentage(1/12*$cols);
}

@mixin fluid-offset($cols) {
    padding-left: percentage(1/12*$cols);
    overflow:hidden;
    width: 100%;
    position: relative;
}

@mixin relative-line-height($rel-height) {
  line-height: percentage($line-height * $rel-height);
}

@mixin fluid-offset-right($cols) {
    padding-right: percentage(1/12*$cols);
    overflow:hidden;
    width: 100%;
    position: relative;
    right: percentage(1/12*$cols);
}

@mixin transition($args) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}

@mixin border-box {
    box-sizing: border-box;
   -moz-box-sizing: border-box;
   -webkit-box-sizing: border-box;
   -ms-box-sizing: border-box;
}

@mixin image-height($width, $bottom) {
  height: $width / 12 * 8 + $bottom;
}

@mixin image-height-sq($width, $bottom) {
  height: ($width * 0.5) + $bottom;
}

%wrapper-full { overflow:hidden; max-width:100%; position: relative; padding-left: $gutter * 2; padding-right: $gutter * 2; }
%wrapper-fixed { max-width:$max-width; margin-left: auto; margin-right: auto; padding-left: $gutter; padding-right: $gutter; }

%main-background { background-color: $white; color:$black; }

%alt-color {
  a {
    color: $secondary-color;
    &:hover, &:active {
      border-color: $secondary-color;
    }
  }
  h1, h3, li:before { color: $secondary-color; }
  .divider {
    &::before { background: $secondary-color; }
    svg path { fill: $secondary-color; }
  }
}

%alt-color-2 {
  a {
    color: $secondary-color-2;
    &:hover, &:active {
      border-color: $secondary-color-2;
    }
  }
  h1, h3, li:before { color: $secondary-color-2; }
  blockquote {
    border-color: $secondary-color-2;
    &:before { background-image: url(images/quote-orange.svg); }
  }
}

%alt-background {
  background-color: $secondary-color; color: #fff;
  a {
    color: $white;
    svg path { fill: $white; }
    &:hover, &:active {
      color:#fff;
      border-color:$white;
      svg path { fill: #fff; }
    }
  }
  h1, h3 { color:$white; }
  h2, h4, li:before { color: $white; }
  hr { border-top: none; }
  blockquote {
    border-color: $white;
    &:before { background-color: $accent-color; background-image: url(images/quote-alt.svg); }
  }
}

%alt-background-2 {
  @extend %alt-background;
  background-color: $secondary-color-2;
}
%bright-background {
  @extend %alt-background;
  background-color: $accent-color;
}

%dark-background {
  @extend %alt-background;
  
  background-image: linear-gradient(to right bottom, rgba($black, .8), rgba($accent-dark, .8)), url(images/Lotus_Background.jpg); 
  background-position: 0 -50px;
  background-size: cover;
}
 
%soft-background {
  background: -webkit-linear-gradient($gradient-color-1, $gradient-color-0, $gradient-color-2);
  background: -o-linear-gradient($gradient-color-1, $gradient-color-0, $gradient-color-2);
  background: -moz-linear-gradient($gradient-color-1, $gradient-color-0, $gradient-color-2);
  background: linear-gradient($gradient-color-1, $gradient-color-0, $gradient-color-2);
}

%gradient-background {
  background: -webkit-linear-gradient(left bottom, $secondary-color, $accent-light);
  background: -o-linear-gradient(top right, $secondary-color, $accent-light);
  background: -moz-linear-gradient(top right, $secondary-color, $accent-light);
  background: linear-gradient(to top right, $secondary-color, $accent-light);
}

%texture-background {
  width: 100%;
  z-index: 100;
  overflow: hidden;
  position: relative;
  background: url(images/textures.jpg);
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
  background-attachment:scroll;
  &::before {
    content: ' ';
    position: absolute;
    top:0; left:0; bottom: -1px; right: 0;
    background: $white;
    opacity: 0.95;
    z-index: 102;
  }
}

%article-padding {
  @media only screen and (min-height: $tablet-width) and (min-width: $tablet-width )  {
    padding: $vertical-spacing 0;
  }
  @media only screen and (min-height: $tablet-width) and (min-width: $lrg-width )  {
      padding: 2*$vertical-spacing 0;
  }
}
%paragraph-margin {
  margin: 0 0 9px;
  @media only screen and (min-width : $tablet-width)  { margin: 0 0 13px; }
}
%underlined  {
  display: inline-block;
  padding-bottom: 0.2px;
  border-bottom-width: 1px;
  border-color: transparent;
  border-bottom-style: solid;
  @include transition(border-color 0.5s);
}
%underlined-hover { border-color: $accent-color; }

%underlined-alt  { @extend %underlined; border-color: $accent-color; }
%underlined-alt-hover { border-color: $black; }

%nested-content { margin-left: $gutter; margin-right:$gutter; }
%double-nested { margin: 0 $gutter-adj * -1; }

%empty {
  margin: 0;
  content: "";
}

%em-head {
  content: ".";  font-size:150%;
  position:relative; top: -0.15em;
  margin: 0 0.1em;
  letter-spacing: 0.1em;
}

%em-head-top {
  top: 11px;
  content: "â€¢";
  display: block;
  font-size:24px;
  position:relative;
  text-align: center;
  font-family: $body-font;
}

%em-head-strong {
  @extend %em-head;
  content: "...";
  font-size:120%;
  top: -0.26em;
}

%link {
  cursor: pointer;
  @extend %underlined;
  padding-bottom: 1px;
  color: $accent-color;
  text-decoration: none;
  &:hover, a:active { color: $accent-color; @extend %underlined-hover; }
}
%linkImportant {
  cursor: pointer!important;
  @extend %underlined;
  padding-bottom: 1px!important;
  color: $accent-color!important;
  text-decoration: none!important;
  &:hover, a:active { color: $accent-color!important; @extend %underlined-hover; }
}
%button {
  @extend %link;
  font-size: 16px;
  background-color: transparent;
  text-transform: uppercase;
  padding: 0.5em 0.7em;
  font-weight: $strong-weight;
  border: 2px solid $accent-color;
  @include transition(all 0.1s);
}
%buttonImportant {
  @extend %linkImportant;
  font-size: 100%!important;
  background-color: transparent!important;
  margin-top: $baseline / 2!important;
  text-transform: uppercase!important;
  padding: 0.5em 0.7em!important;
  font-weight: $strong-weight!important;  
  border: 2px solid $accent-color!important;
  @include transition(all 0.1s);
  border-radius: 0!important;
}

%body-of-text {
  max-width: 39em;
  margin-left: auto;
  margin-right: auto;
}

%bigger { font-size: 105%;  }
%white-out { color: $white; }

@mixin clearfix {
  &::after {
      content: "";
      display: table;
      clear: both;
  }
}

/* Absolute Centre Position an element */
@mixin absCenter {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Drop Shadow
@mixin dropShadow {
  box-shadow: 5px 5px 10px rgba($black, .5);
}

// Modal Dialog
@mixin modal {
    // High z-index to cover signin button
    z-index: 10000;

    z-index: 10000;
    box-shadow: 5px 5px 10px rgba(55, 51, 61, 0.5);
    position: fixed;
    width: 70vw;
    background-color: #f7f4f0;
    border-top: 1px solid #c2edef;
    border-left: 1px solid #c2edef;
    border-bottom: 1px solid #c2edef;
    top: 5vh;
    left: 100%;
    max-height: 90vh;
    transition: left .4s;
    overflow-y: scroll;

    &.open {
        left: 15vw;
    }

    h5 {
        font-weight: 500;
        font-family: $display-font;
    }

    /* width */
    &::-webkit-scrollbar {
      width: 12px;
    }

    /* Track */
    &::-webkit-scrollbar-track {
    }

    /* Handle */
    &::-webkit-scrollbar-thumb {
      background-color: $accent-color;
    }
}

/* 
    MEDIA QUERY MANAGER (MOBILE FIRST APPROACH)

    in pixels
    0 - 600         Phone ($phone)
    600 - 900       Tablet Portrait ($tablet)
    900 - 1200      Tablet Landscape ($tablet-wide)
    [1200 - 1800]   Regular Desktop Styles Apply

    ORDER OF MEDIA QUERIES: 
        base + typography
        general layout + grid
        page layout
        components

*/

@mixin respond($breakpoint) { 
    @media only screen and ( min-width: $breakpoint ) { @content; }  
}
